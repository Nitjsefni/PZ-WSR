//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RMEntities : DbContext
    {
        public RMEntities()
            : base("name=RMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Karetka> Karetkas { get; set; }
        public DbSet<Pacjenci1> Pacjenci1 { get; set; }
        public DbSet<Personel1> Personel1 { get; set; }
        public DbSet<Wypadek> Wypadeks { get; set; }
        public DbSet<Sklad> Sklad { get; set; }
    
        public virtual ObjectResult<LekarzePoSpecjalizacji_Result> LekarzePoSpecjalizacji(string parametr)
        {
            var parametrParameter = parametr != null ?
                new ObjectParameter("parametr", parametr) :
                new ObjectParameter("parametr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LekarzePoSpecjalizacji_Result>("LekarzePoSpecjalizacji", parametrParameter);
        }
    
        public virtual int pacjenciMiastoLista(ObjectParameter listaPacjentow)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pacjenciMiastoLista", listaPacjentow);
        }
    
        public virtual ObjectResult<string> pacjenciMiastoLista2(string parametr, ObjectParameter listaPacjentow)
        {
            var parametrParameter = parametr != null ?
                new ObjectParameter("parametr", parametr) :
                new ObjectParameter("parametr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pacjenciMiastoLista2", parametrParameter, listaPacjentow);
        }
    
        public virtual int ilePacjentow(string miasto, ObjectParameter liczba)
        {
            var miastoParameter = miasto != null ?
                new ObjectParameter("miasto", miasto) :
                new ObjectParameter("miasto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ilePacjentow", miastoParameter, liczba);
        }
    }
}
